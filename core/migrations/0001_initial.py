# Generated by Django 2.2.5 on 2019-11-30 15:17

import core.models.mixins.checks
import core.models.mixins.decisions
import core.models.mixins.resolver
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('ended', 'Ended')], default='pending', max_length=22)),
                ('private', models.BooleanField(default=False)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('order_deadline', models.CharField(choices=[('twelve hours', '12 hours'), ('twenty four hours', '24 hours'), ('two days', '2 days'), ('three days', '3 days'), ('five days', '5 days'), ('seven days', '7 days')], default='twenty four hours', max_length=100)),
                ('retreat_deadline', models.CharField(choices=[('twelve hours', '12 hours'), ('twenty four hours', '24 hours'), ('two days', '2 days'), ('three days', '3 days'), ('five days', '5 days'), ('seven days', '7 days')], default='twenty four hours', max_length=100)),
                ('build_deadline', models.CharField(choices=[('twelve hours', '12 hours'), ('twenty four hours', '24 hours'), ('two days', '2 days'), ('three days', '3 days'), ('five days', '5 days'), ('seven days', '7 days')], default='twelve hours', max_length=100)),
                ('process_on_finalized_orders', models.BooleanField(default=True)),
                ('nation_choice_mode', models.CharField(choices=[('random', 'Random'), ('preference', 'Preference'), ('first come', 'First come first serve')], default='random', max_length=100)),
                ('num_players', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_games', to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'game',
            },
        ),
        migrations.CreateModel(
            name='NamedCoast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('map_abbreviation', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'named_coast',
            },
        ),
        migrations.CreateModel(
            name='Nation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'nation',
            },
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('land', 'Land'), ('sea', 'Sea')], max_length=10)),
                ('coastal', models.BooleanField(default=False)),
                ('controlled_by_initial', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initially_controlled_territories', to='core.Nation')),
                ('nationality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='national_territories', to='core.Nation')),
                ('neighbours', models.ManyToManyField(blank=True, related_name='_territory_neighbours_+', to='core.Territory')),
                ('shared_coasts', models.ManyToManyField(related_name='_territory_shared_coasts_+', to='core.Territory')),
            ],
            options={
                'db_table': 'territory',
            },
            bases=(models.Model, core.models.mixins.decisions.HoldStrength),
        ),
        migrations.CreateModel(
            name='Turn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(choices=[('fall', 'Fall'), ('spring', 'Spring')], max_length=7)),
                ('phase', models.CharField(choices=[('order', 'Order'), ('retreat and disband', 'Retreat and Disband'), ('build', 'Build')], max_length=20)),
                ('year', models.PositiveIntegerField()),
                ('current_turn', models.BooleanField(default=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turns', to='core.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('max_num_players', models.PositiveIntegerField(default=7)),
            ],
        ),
        migrations.CreateModel(
            name='SupplyCenter',
            fields=[
                ('territory', models.OneToOneField(db_column='territory_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='supply_center', serialize=False, to='core.Territory')),
                ('initial_piece_type', models.CharField(choices=[('army', 'Army'), ('fleet', 'Fleet')], max_length=50)),
            ],
            options={
                'db_table': 'supply_center',
            },
        ),
        migrations.CreateModel(
            name='TurnEnd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('task_id', models.CharField(max_length=255, null=True)),
                ('turn', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='end', to='core.Turn')),
            ],
        ),
        migrations.CreateModel(
            name='TerritoryState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('controlled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='controlled_territories', to='core.Nation')),
                ('territory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territory_states', to='core.Territory')),
                ('turn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territorystates', to='core.Turn')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='territory',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territories', to='core.Variant'),
        ),
        migrations.CreateModel(
            name='SupplyCenterState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('controlled_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supply_center_states', to='core.Nation')),
                ('turn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supply_center_states', to='core.Turn')),
            ],
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('persisted_piece_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='This ID is persisted across `Piece` instances to which belong to the same in game piece.')),
                ('type', models.CharField(choices=[('army', 'Army'), ('fleet', 'Fleet')], default='army', max_length=50)),
                ('dislodged_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='piece_disloged', to='core.Piece')),
                ('named_coast', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.NamedCoast')),
                ('nation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pieces', to='core.Nation')),
                ('retreat_territories', models.ManyToManyField(blank=True, related_name='retreat_pieces', to='core.Territory')),
                ('territory', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Territory')),
                ('turn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pieces', to='core.Turn')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('hold', 'Hold'), ('move', 'Move'), ('support', 'Support'), ('convoy', 'Convoy'), ('retreat', 'Retreat'), ('build', 'Build'), ('disband', 'Disband')], default='hold', max_length=8)),
                ('piece_type', models.CharField(blank=True, choices=[('army', 'Army'), ('fleet', 'Fleet')], max_length=50, null=True)),
                ('via_convoy', models.BooleanField(default=False)),
                ('outcome', models.CharField(blank=True, choices=[('resolved', 'Resolved'), ('bounced', 'Bounced'), ('illegal', 'Illegal'), ('aux failed', 'Aux failed'), ('aux does not correspond', 'Aux does not correspond')], max_length=25, null=True)),
                ('aux', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Territory')),
                ('nation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.Nation')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Territory')),
                ('target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Territory')),
                ('target_coast', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.NamedCoast')),
                ('turn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.Turn')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, core.models.mixins.checks.ChecksMixin, core.models.mixins.decisions.OrderDecisionsMixin, core.models.mixins.resolver.ResolverMixin),
        ),
        migrations.CreateModel(
            name='NationState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orders_finalized', models.BooleanField(default=True)),
                ('surrendered', models.BooleanField(default=False)),
                ('nation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Nation')),
                ('turn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nationstates', to='core.Turn')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nation_states', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='nation',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nations', to='core.Variant'),
        ),
        migrations.AddField(
            model_name='namedcoast',
            name='neighbours',
            field=models.ManyToManyField(blank=True, related_name='named_coast_neighbours', to='core.Territory'),
        ),
        migrations.AddField(
            model_name='namedcoast',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='named_coasts', to='core.Territory'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='core.Nation')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='core.Nation')),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.AddField(
            model_name='game',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='core.Variant'),
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('nation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='core.Nation')),
            ],
            options={
                'db_table': 'announcement',
            },
        ),
        migrations.AddConstraint(
            model_name='turn',
            constraint=models.UniqueConstraint(fields=('game', 'year', 'season', 'phase'), name='unique_phase_per_game,'),
        ),
        migrations.AddField(
            model_name='supplycenterstate',
            name='supply_center',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='core.SupplyCenter'),
        ),
        migrations.AddField(
            model_name='supplycenter',
            name='nationality',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='national_supply_centers', to='core.Nation'),
        ),
        migrations.AddConstraint(
            model_name='namedcoast',
            constraint=models.UniqueConstraint(fields=('parent', 'map_abbreviation'), name='unique_coast_abbreviation'),
        ),
        migrations.AddConstraint(
            model_name='namedcoast',
            constraint=models.UniqueConstraint(fields=('parent', 'name'), name='unique_coast_name'),
        ),
    ]
