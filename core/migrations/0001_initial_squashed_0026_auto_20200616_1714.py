# Generated by Django 3.0.6 on 2020-06-21 12:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('core', '0001_initial'), ('core', '0002_territorymapdata'), ('core', '0003_auto_20200509_1806'), ('core', '0004_auto_20200509_1808'), ('core', '0005_auto_20200509_1809'), ('core', '0006_delete_territorymapdata'), ('core', '0007_mapdata_territorymapdata'), ('core', '0008_mapdata_identifier'), ('core', '0009_auto_20200509_1954'), ('core', '0010_namedcoast_piece_starts_here'), ('core', '0011_auto_20200516_1338'), ('core', '0012_auto_20200516_1540'), ('core', '0013_auto_20200516_1545'), ('core', '0014_auto_20200516_1547'), ('core', '0015_auto_20200521_1707'), ('core', '0016_namedcoastmapdata'), ('core', '0017_game_winners'), ('core', '0018_variant_num_supply_centers_to_win'), ('core', '0019_auto_20200523_1317'), ('core', '0020_auto_20200525_1751'), ('core', '0021_territorystate_contested'), ('core', '0022_territorystate_bounce_occurred'), ('core', '0023_auto_20200530_1256'), ('core', '0024_auto_20200530_1318'), ('core', '0025_auto_20200612_1702'), ('core', '0026_auto_20200616_1714')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('ended', 'Ended')], default='pending', editable=False, max_length=22)),
                ('private', models.BooleanField(default=False)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('order_deadline', models.CharField(choices=[('twelve_hours', '12 hours'), ('twenty_four_hours', '24 hours'), ('two_days', '2 days'), ('three_days', '3 days'), ('five_days', '5 days'), ('seven_days', '7 days')], default='twenty_four_hours', max_length=100)),
                ('retreat_deadline', models.CharField(choices=[('twelve_hours', '12 hours'), ('twenty_four_hours', '24 hours'), ('two_days', '2 days'), ('three_days', '3 days'), ('five_days', '5 days'), ('seven_days', '7 days')], default='twenty_four_hours', max_length=100)),
                ('build_deadline', models.CharField(choices=[('twelve_hours', '12 hours'), ('twenty_four_hours', '24 hours'), ('two_days', '2 days'), ('three_days', '3 days'), ('five_days', '5 days'), ('seven_days', '7 days')], default='twelve_hours', max_length=100)),
                ('process_on_finalized_orders', models.BooleanField(default=True)),
                ('nation_choice_mode', models.CharField(choices=[('random', 'Random'), ('preference', 'Preference'), ('first_come', 'First come first serve')], default='random', max_length=100)),
                ('num_players', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('initialized_at', models.DateTimeField(null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_games', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'game',
            },
        ),
        migrations.CreateModel(
            name='NamedCoast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('map_abbreviation', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'named_coast',
            },
        ),
        migrations.CreateModel(
            name='Nation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('army', 'Army'), ('fleet', 'Fleet')], default='army', max_length=50)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pieces', to='core.Game')),
                ('nation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pieces', to='core.Nation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('inland', 'Inland'), ('coastal', 'Coastal'), ('sea', 'Sea')], max_length=10)),
                ('supply_center', models.BooleanField(default=False)),
                ('initial_piece_type', models.CharField(choices=[('army', 'Army'), ('fleet', 'Fleet')], max_length=50, null=True)),
                ('controlled_by_initial', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initially_controlled_territories', to='core.Nation')),
                ('nationality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='national_territories', to='core.Nation')),
                ('neighbours', models.ManyToManyField(blank=True, related_name='_territory_neighbours_+', to='core.Territory')),
                ('shared_coasts', models.ManyToManyField(related_name='_territory_shared_coasts_+', to='core.Territory')),
            ],
        ),
        migrations.CreateModel(
            name='Turn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(choices=[('fall', 'Fall'), ('spring', 'Spring')], max_length=7)),
                ('phase', models.CharField(choices=[('order', 'Order'), ('retreat_and_disband', 'Retreat and Disband'), ('build', 'Build')], max_length=20)),
                ('year', models.PositiveIntegerField()),
                ('current_turn', models.BooleanField(default=True)),
                ('processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turns', to='core.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('max_num_players', models.PositiveIntegerField(default=7)),
                ('starting_year', models.PositiveIntegerField(default=1900)),
                ('starting_season', models.CharField(choices=[('fall', 'Fall'), ('spring', 'Spring')], default='spring', max_length=100)),
                ('starting_phase', models.CharField(choices=[('order', 'Order'), ('retreat_and_disband', 'Retreat and Disband'), ('build', 'Build')], default='order', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TurnEnd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('task_id', models.CharField(max_length=255, null=True)),
                ('turn', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='end', to='core.Turn')),
            ],
        ),
        migrations.CreateModel(
            name='TerritoryState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('controlled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='controlled_territories', to='core.Nation')),
                ('territory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territory_states', to='core.Territory')),
                ('turn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territorystates', to='core.Turn')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='territory',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territories', to='core.Variant'),
        ),
        migrations.CreateModel(
            name='PieceState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dislodged', models.BooleanField(default=False)),
                ('attacker_territory', models.ForeignKey(blank=True, help_text="If the piece was dislodged via a land attack, the piece cannot to the attacking piece's territory.", null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Territory')),
                ('dislodged_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='piece_disloged', to='core.PieceState')),
                ('named_coast', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pieces', to='core.NamedCoast')),
                ('piece', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='core.Piece')),
                ('territory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pieces', to='core.Territory')),
                ('turn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='piecestates', to='core.Turn')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('hold', 'Hold'), ('move', 'Move'), ('support', 'Support'), ('convoy', 'Convoy'), ('retreat', 'Retreat'), ('build', 'Build'), ('disband', 'Disband')], default='hold', max_length=8)),
                ('piece_type', models.CharField(blank=True, choices=[('army', 'Army'), ('fleet', 'Fleet')], max_length=50, null=True)),
                ('via_convoy', models.BooleanField(default=False)),
                ('outcome', models.CharField(blank=True, choices=[('moves', 'Moves'), ('resolved', 'Resolved'), ('bounced', 'Bounced'), ('aux_failed', 'Aux failed'), ('aux_does_not_correspond', 'Aux does not correspond')], max_length=25, null=True)),
                ('legal', models.BooleanField(default=True)),
                ('illegal_message', models.CharField(blank=True, max_length=500, null=True)),
                ('aux', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Territory')),
                ('nation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.Nation')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Territory')),
                ('target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Territory')),
                ('target_coast', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.NamedCoast')),
                ('turn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.Turn')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NationState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orders_finalized', models.BooleanField(default=False)),
                ('surrendered', models.BooleanField(default=False)),
                ('nation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Nation')),
                ('turn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nationstates', to='core.Turn')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nation_states', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='nation',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nations', to='core.Variant'),
        ),
        migrations.AddField(
            model_name='namedcoast',
            name='neighbours',
            field=models.ManyToManyField(blank=True, related_name='named_coast_neighbours', to='core.Territory'),
        ),
        migrations.AddField(
            model_name='namedcoast',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='named_coasts', to='core.Territory'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='core.Nation')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='core.Nation')),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.AddField(
            model_name='game',
            name='participants',
            field=models.ManyToManyField(through='core.Participation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='game',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='core.Variant'),
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('nation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='core.Nation')),
            ],
            options={
                'db_table': 'announcement',
            },
        ),
        migrations.AddConstraint(
            model_name='turn',
            constraint=models.UniqueConstraint(fields=('game', 'year', 'season', 'phase'), name='unique_phase_per_game,'),
        ),
        migrations.AddConstraint(
            model_name='namedcoast',
            constraint=models.UniqueConstraint(fields=('parent', 'map_abbreviation'), name='unique_coast_abbreviation'),
        ),
        migrations.AddConstraint(
            model_name='namedcoast',
            constraint=models.UniqueConstraint(fields=('parent', 'name'), name='unique_coast_name'),
        ),
        migrations.CreateModel(
            name='MapData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='map_data', to='core.Variant')),
                ('identifier', models.CharField(default='normal', max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='namedcoast',
            name='piece_starts_here',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='piecestate',
            name='must_retreat',
            field=models.BooleanField(default=False, help_text='Signifies that the piece was dislodged in the previous turn and now must retreat.'),
        ),
        migrations.AlterField(
            model_name='piecestate',
            name='dislodged_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='piece_dislodged', to='core.PieceState'),
        ),
        migrations.AlterField(
            model_name='variant',
            name='starting_year',
            field=models.PositiveIntegerField(default=1901),
        ),
        migrations.AddField(
            model_name='piece',
            name='turn_disbanded',
            field=models.ForeignKey(blank=True, help_text='The turn during which this piece was disbanded. Will always be a retreat/disband phase or a build/disband phase.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Turn'),
        ),
        migrations.AddField(
            model_name='piece',
            name='turn_created',
            field=models.ForeignKey(blank=True, help_text='The turn during which this piece was created. Will always be a build phase. If null, piece was created at the beginning of the game.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Turn'),
        ),
        migrations.CreateModel(
            name='TerritoryMapData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('abbreviation', models.CharField(max_length=100, null=True)),
                ('path', models.TextField()),
                ('text_x', models.FloatField(null=True)),
                ('text_y', models.FloatField(null=True)),
                ('piece_x', models.FloatField(null=True)),
                ('piece_y', models.FloatField(null=True)),
                ('dislodged_piece_x', models.FloatField(null=True)),
                ('dislodged_piece_y', models.FloatField(null=True)),
                ('supply_center_x', models.FloatField(null=True)),
                ('supply_center_y', models.FloatField(null=True)),
                ('map_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territory_data', to='core.MapData')),
                ('territory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='map_data', to='core.Territory')),
                ('type', models.CharField(choices=[('land', 'Land'), ('sea', 'Sea')], default='land', max_length=100)),
            ],
        ),
        migrations.AlterField(
            model_name='order',
            name='outcome',
            field=models.CharField(blank=True, choices=[('moves', 'Moves'), ('resolved', 'Resolved'), ('bounced', 'Bounced'), ('aux_failed', 'Aux failed'), ('aux_does_not_correspond', 'Aux does not correspond'), ('succeeds', 'Succeeds'), ('fails', 'Fails')], max_length=25, null=True),
        ),
        migrations.CreateModel(
            name='NamedCoastMapData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(max_length=100)),
                ('text_x', models.FloatField(null=True)),
                ('text_y', models.FloatField(null=True)),
                ('piece_x', models.FloatField(null=True)),
                ('piece_y', models.FloatField(null=True)),
                ('dislodged_piece_x', models.FloatField(null=True)),
                ('dislodged_piece_y', models.FloatField(null=True)),
                ('map_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='named_coast_data', to='core.MapData')),
                ('named_coast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='map_data', to='core.NamedCoast')),
            ],
        ),
        migrations.AddField(
            model_name='variant',
            name='num_supply_centers_to_win',
            field=models.PositiveIntegerField(default=18),
        ),
        migrations.AlterField(
            model_name='game',
            name='participants',
            field=models.ManyToManyField(blank=True, through='core.Participation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='game',
            name='participants',
            field=models.ManyToManyField(through='core.Participation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='game',
            name='winners',
            field=models.ManyToManyField(to='core.NationState'),
        ),
        migrations.AddConstraint(
            model_name='piecestate',
            constraint=models.UniqueConstraint(fields=('turn', 'territory', 'must_retreat'), name='unique_piece_in_territory,'),
        ),
        migrations.AddField(
            model_name='territorystate',
            name='contested',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='territorystate',
            name='bounce_occurred',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='piecestate',
            name='destroyed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='piecestate',
            name='destroyed_message',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='outcome',
            field=models.CharField(blank=True, choices=[('moves', 'Moves'), ('resolved', 'Resolved'), ('bounced', 'Bounced'), ('aux_failed', 'Aux failed'), ('aux_does_not_correspond', 'Aux does not correspond'), ('succeeds', 'Succeeds'), ('given', 'Given'), ('fails', 'Fails')], max_length=25, null=True),
        ),
        migrations.RenameField(
            model_name='order',
            old_name='illegal_message',
            new_name='illegal_verbose',
        ),
        migrations.AddField(
            model_name='order',
            name='outcome_verbose',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterModelTable(
            name='game',
            table=None,
        ),
    ]
